name: "Build gen_emu_config script (Linux)"

on:
  workflow_call:
    # needed since it allows this to become a reusable workflow
  workflow_dispatch:
    # allows manual trigger

permissions:
  contents: "write"

env:
  ARTIFACT_NAME: "gen_emu_cfg-Linux-Release-${{ github.sha }}"
  SCRIPT_BASE_DIR: "generate_emu_config_old"
  PACKAGE_BASE_DIR: "generate_emu_config_old/bin/linux"
  THIRD_PARTY_BASE_DIR: "third-party"

jobs:
  build:
    runs-on: "ubuntu-22.04"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download emu-linux-release.tar.bz2
        uses: robinraju/release-downloader@v1.6
        with:
          repository: 'alex47exe/gse_fork'
          fileName: 'emu-linux-release.tar.bz2'
          latest: true

      - name: Download emu-linux-debug.tar.bz2
        uses: robinraju/release-downloader@v1.6
        with:
          repository: 'alex47exe/gse_fork'
          fileName: 'emu-linux-debug.tar.bz2'
          latest: true

      - name: Ensure _gse_release_linux directory exists
        run: mkdir -p ./_gse_release_linux

      - name: Extract emu-linux-release.tar.bz2
        run: tar xjf emu-linux-release.tar.bz2 -C ./_gse_release_linux

      - name: Extract emu-linux-debug.tar.bz2
        run: tar xjf emu-linux-debug.tar.bz2 -C ./_gse_release_linux

      # env
      - name: "Install env"
        shell: "bash"
        working-directory: "${{ env.SCRIPT_BASE_DIR }}"
        run: sudo chmod 777 recreate_venv_linux.sh && sudo ./recreate_venv_linux.sh

      # fix folder permissions! not sure why this fails
      # nested subdirs "build/linux/release" cause permission problems
      - name: "Give all permissions to repo folder"
        shell: "bash"
        working-directory: "${{ github.workspace }}"
        run: sudo chmod -R 777 "${{ github.workspace }}"

      # build
      - name: "Rebuild"
        shell: "bash"
        working-directory: "${{ env.SCRIPT_BASE_DIR }}"
        run: sudo chmod 777 rebuild_linux.sh && ./rebuild_linux.sh

      # compress only contents of bin/win directory into a tar.bz2 archive without preceding paths, using bzip2 compression
      - name: Compress build package with maximum compression
        run: |
          cd ${{ env.SCRIPT_BASE_DIR }}/bin/linux
          tar -cjf ../../gen_emu_cfg-Linux-Release.tar.bz2 *

      # upload tar.bz2 artifact
      - name: "Upload build package"
        uses: actions/upload-artifact@v4
        with:
          name: "gen_emu_cfg-Linux-Release-${{ github.sha }}"
          path: "${{ env.SCRIPT_BASE_DIR }}/gen_emu_cfg-Linux-Release.tar.bz2"
          if-no-files-found: "error"
          retention-days: 1
